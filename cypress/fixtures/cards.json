[
  {
    "_id": "5d8b0b4ac9807cb5c6e76278",
    "title": "1Array: Elemente ausloggen",
    "question": "Wie logge ich alle Strings aus einem Array mit mehreren Strings aus?",
    "answer": "`list.forEach(element => console.log(element))`",
    "tags": ["js", "array", "basics"],
    "isBookmarked": true
  },
  {
    "_id": "5d8b0b4ac9807cb5c6e76279",
    "title": "HTML-Element erzeugen",
    "question": "Wie erzeuge ich ein neues HTML-Element in JavaScript?",
    "answer": "`document.createElement('div')`",
    "tags": ["js", "dom", "basics"],
    "isBookmarked": false
  },
  {
    "_id": "5d8b0b4ac9807cb5c6e7627a",
    "title": "HTML-Element einfügen 1",
    "question": "Wie füge ich ein Element über einem anderen Element ein?",
    "answer": "`.insertAdjacentElement(position, element)`",
    "tags": ["js", "dom", "basics"],
    "doPractice": true,
    "isBookmarked": true
  },
  {
    "_id": "5d8b0b4ac9807cb5c6e7627b",
    "title": "querySelector 2",
    "question": "Was macht das 'target = document' in der Funktion: \n\nfunction get (sel, target = document) {\nreturn target.querySelector(sel) \n}",
    "answer": "default-Parameter wird festgelegt, nämlich document als target. Dieser wird automatisch gewählt, wenn wir kein Argument für target eingeben beim Aufrufen der Funktion",
    "tags": ["js", "basics"],
    "isBookmarked": false
  },
  {
    "_id": "5d8b0b4ac9807cb5c6e7627c",
    "title": "querySelector 1",
    "question": "Wie schnappe ich mir ein Element mit document.querySelector, das vom Typ range sein soll?",
    "answer": "`document.querySelector('input[type=range]'`",
    "tags": ["js", "basics"],
    "isBookmarked": false
  },
  {
    "_id": "5d8b0b4ac9807cb5c6e7627d",
    "title": "HTML-Element einfügen 2",
    "question": "Wie füge ich HTML in ein vorhandenes HTML-Element ein?",
    "answer": "`.innerHTML`",
    "tags": ["js", "basics"],
    "isBookmarked": false
  },
  {
    "_id": "5d8b0b4ac9807cb5c6e7627e",
    "title": "HTML-Element einfügen 3",
    "question": "Was tue ich, wenn ich einem HTML-String vorne etwas anfügen will, z. B. vor das innere HTML eines divs",
    "answer": "`div.insertAdjacentHTML('afterbegin', '<small>hi</small>'`",
    "tags": ["js", "basics"],
    "isBookmarked": false
  },
  {
    "_id": "5d8b0b4ac9807cb5c6e7627f",
    "title": "CSS - Style 1",
    "question": "Wenn der User runterscrollt, soll die Schriftgröße der Überschrift größer werden!",
    "answer": "`const el = document.querySelector(h1) -> window.addEventListener(\"scroll\", function) -> el.style.fontSize = \"irgendwas Größeres\"`",
    "tags": ["css", "basics"],
    "isBookmarked": false
  },
  {
    "_id": "5d8b0b4ac9807cb5c6e76280",
    "title": "innerHTML",
    "question": "Was ist der Unterschied zwischen .innerHTML und .textContent?",
    "answer": "Der Inhalt von `.innerHTML` wird als HTML ausgeführt, während `.textContent` nur den Textinhalt verändert.",
    "tags": ["js", "basics"],
    "isBookmarked": false
  },
  {
    "_id": "5d8b0b4ac9807cb5c6e76281",
    "title": "Submit",
    "question": "Ich habe ein Formular und auf 'submit' soll etwas passieren nach '.addEventListener', aber das Formular soll nicht abgeschickt werden. Was muss ich beachten?",
    "answer": "`event.preventDefault()`",
    "tags": ["js", "basics"],
    "isBookmarked": false
  },
  {
    "_id": "5d8b1a436cb459ca2870c898",
    "title": "JSX",
    "question": "How does jsx look like?",
    "answer": "```jsx\r\nfunction Test() {\r\n  return <h1>hi</h1>\r\n}\r\n```",
    "__v": { "$numberInt": "0" },
    "isBookmarked": false,
    "tags": ["js", "react", "basics"]
  },
  {
    "_id": "5dac4ca6ed4412a06a8654b3",
    "tags": ["html", "basics"],
    "title": "sectioning elements",
    "question": "Welche sectioning elements kennst du?",
    "answer": "- section\r\n- header\r\n- footer\r\n- aside\r\n- nav\r\n- main\r\n- article",
    "__v": { "$numberInt": "0" }
  }
]
